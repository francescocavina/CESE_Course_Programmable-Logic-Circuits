$date
  Mon Oct  2 16:43:58 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module barrel_shifter_4bit_tb $end
$var reg 4 ! x_tb[3:0] $end
$var reg 2 " shift_tb[1:0] $end
$var reg 4 # y_tb[3:0] $end
$scope module dut $end
$var reg 4 $ x_i[3:0] $end
$var reg 2 % shift_i[1:0] $end
$var reg 4 & y_o[3:0] $end
$scope module mux_inst3 $end
$var reg 4 ' x_i[3:0] $end
$var reg 2 ( sel_i[1:0] $end
$var reg 1 ) y_o $end
$upscope $end
$scope module mux_inst2 $end
$var reg 4 * x_i[3:0] $end
$var reg 2 + sel_i[1:0] $end
$var reg 1 , y_o $end
$upscope $end
$scope module mux_inst1 $end
$var reg 4 - x_i[3:0] $end
$var reg 2 . sel_i[1:0] $end
$var reg 1 / y_o $end
$upscope $end
$scope module mux_inst0 $end
$var reg 4 0 x_i[3:0] $end
$var reg 2 1 sel_i[1:0] $end
$var reg 1 2 y_o $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0001 !
b00 "
b0001 #
b0001 $
b00 %
b0001 &
b0010 '
b00 (
0)
b0100 *
b00 +
0,
b1000 -
b00 .
0/
b0001 0
b00 1
12
#200000000
b01 "
b1000 #
b01 %
b1000 &
b01 (
1)
b01 +
b01 .
b01 1
02
#400000000
b10 "
b0100 #
b10 %
b0100 &
b10 (
0)
b10 +
1,
b10 .
b10 1
#600000000
b11 "
b0010 #
b11 %
b0010 &
b11 (
b11 +
0,
b11 .
1/
b11 1
#800000000
b00 "
b0001 #
b00 %
b0001 &
b00 (
b00 +
b00 .
0/
b00 1
12
